[{"C:\\Training\\JS_Fullstack\\Mongo_DB\\pizza_delivery\\frontend\\src\\index.js":"1","C:\\Training\\JS_Fullstack\\Mongo_DB\\pizza_delivery\\frontend\\src\\reportWebVitals.js":"2","C:\\Training\\JS_Fullstack\\Mongo_DB\\pizza_delivery\\frontend\\src\\App.js":"3","C:\\Training\\JS_Fullstack\\Mongo_DB\\pizza_delivery\\frontend\\src\\components\\Register.js":"4","C:\\Training\\JS_Fullstack\\Mongo_DB\\pizza_delivery\\frontend\\src\\components\\Dashboard.js":"5","C:\\Training\\JS_Fullstack\\Mongo_DB\\pizza_delivery\\frontend\\src\\components\\MyOrder.js":"6","C:\\Training\\JS_Fullstack\\Mongo_DB\\pizza_delivery\\frontend\\src\\components\\Menu.js":"7","C:\\Training\\JS_Fullstack\\Mongo_DB\\pizza_delivery\\frontend\\src\\components\\Profile.js":"8","C:\\Training\\JS_Fullstack\\Mongo_DB\\pizza_delivery\\frontend\\src\\components\\Login.js":"9","C:\\Training\\JS_Fullstack\\Mongo_DB\\pizza_delivery\\frontend\\src\\components\\Logout.js":"10","C:\\Training\\JS_Fullstack\\Mongo_DB\\pizza_delivery\\frontend\\src\\components\\Cart.js":"11","C:\\Training\\JS_Fullstack\\Mongo_DB\\pizza_delivery\\frontend\\src\\components\\Checkout.js":"12","C:\\Training\\JS_Fullstack\\Mongo_DB\\pizza_delivery\\frontend\\src\\components\\OrderPlaced.js":"13","C:\\Training\\JS_Fullstack\\Mongo_DB\\pizza_delivery\\frontend\\src\\components\\DashNav.js":"14","C:\\Training\\JS_Fullstack\\Mongo_DB\\pizza_delivery\\frontend\\src\\components\\Navv.js":"15","C:\\Training\\JS_Fullstack\\Mongo_DB\\pizza_delivery\\frontend\\src\\config\\Myservice.js":"16","C:\\Training\\JS_Fullstack\\Mongo_DB\\pizza_delivery\\frontend\\src\\config\\Url.js":"17"},{"size":500,"mtime":499162500000,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"19"},{"size":1248,"mtime":1638905106583,"results":"21","hashOfConfig":"19"},{"size":8518,"mtime":1638938209902,"results":"22","hashOfConfig":"19"},{"size":1399,"mtime":1638777013666,"results":"23","hashOfConfig":"19"},{"size":1628,"mtime":1638904690594,"results":"24","hashOfConfig":"19"},{"size":3135,"mtime":1638937094834,"results":"25","hashOfConfig":"19"},{"size":1467,"mtime":1638907295078,"results":"26","hashOfConfig":"19"},{"size":5544,"mtime":1638935660978,"results":"27","hashOfConfig":"19"},{"size":168,"mtime":1638821995651,"results":"28","hashOfConfig":"19"},{"size":2216,"mtime":1638900221797,"results":"29","hashOfConfig":"19"},{"size":1897,"mtime":1638938874937,"results":"30","hashOfConfig":"19"},{"size":734,"mtime":1638905567729,"results":"31","hashOfConfig":"19"},{"size":813,"mtime":1638771961021,"results":"32","hashOfConfig":"19"},{"size":1823,"mtime":1638939158247,"results":"33","hashOfConfig":"19"},{"size":1329,"mtime":1638937267907,"results":"34","hashOfConfig":"19"},{"size":51,"mtime":1638769207506,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1c2prxf",{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Training\\JS_Fullstack\\Mongo_DB\\pizza_delivery\\frontend\\src\\index.js",[],"C:\\Training\\JS_Fullstack\\Mongo_DB\\pizza_delivery\\frontend\\src\\reportWebVitals.js",[],"C:\\Training\\JS_Fullstack\\Mongo_DB\\pizza_delivery\\frontend\\src\\App.js",[],"C:\\Training\\JS_Fullstack\\Mongo_DB\\pizza_delivery\\frontend\\src\\components\\Register.js",["77","78"],"import React,{useState,useEffect,useRef} from 'react'\r\nimport DashNav from './DashNav';\r\nimport {Form,Container,Button} from 'react-bootstrap'\r\nimport { addUser, getRegUser } from '../config/Myservice';\r\nimport { useNavigate } from 'react-router';\r\n\r\nconst regForName=RegExp(/^[A-Za-z]{2,50}$/);\r\nconst regForEmail=RegExp(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/);\r\nconst regForAddress=RegExp(/^[A-Za-z0-9]{5,150}$/)\r\n\r\n\r\nexport default function Register() {\r\n    const [userData,setUserData]=useState([]);\r\n    const nameInp=useRef(null);\r\n    const emailInp=useRef(null);\r\n    const mobileInp=useRef(null);\r\n    const addressInp=useRef(null);\r\n    const passInp=useRef(null);\r\n    const cpassInp=useRef(null);\r\n    const [select,setSelect]=useState();\r\n    const [errors,setErrors]=useState({ name:'',mobile:'',address:'', email:'',password:'',con_password:''});\r\n    const navigate=useNavigate();\r\n\r\n    useEffect(()=>{\r\n        getRegUser()\r\n        .then(res=>{\r\n            if(res.data.err === 1){\r\n                alert(res.data.msg)\r\n            }\r\n            else if( res.data.err === 0){\r\n                // console.log(res.data.regUser)\r\n                setUserData(res.data.regUser)\r\n                // console.log(userData)\r\n            }\r\n        })\r\n    },[userData])\r\n\r\n    const handler=(event)=>{\r\n        const {name,value}=event.target;\r\n        switch(name){\r\n            case 'name':\r\n                errors.name=regForName.test(value)?'':'Enter Valid name!';\r\n                break;\r\n            case 'mobile':\r\n                errors.mobile=value.length===10?'':'Enter Valid Mobile no!';\r\n                break;\r\n            case 'address':\r\n                errors.address=regForAddress.test(value)?'':'Enter Valid Address!';\r\n                break;\r\n            case 'email':\r\n                errors.email=regForEmail.test(value)?'':'Email is not valid';\r\n                break;\r\n            case 'password':\r\n                errors.password=forPassword(value);\r\n                console.log(errors.password)\r\n                \r\n                break;\r\n            case 'con_password':\r\n                errors.con_password=passInp.current.value===(value)?'':'Password does not match';\r\n                //  console.log(errors.password)\r\n                break;\r\n            default :\r\n                break;\r\n        }\r\n        setSelect({errors,[name]:value},()=>{\r\n            console.log(errors)\r\n        })\r\n    }\r\n\r\n    const forPassword=(value)=>{\r\n        const upper=RegExp(/^(?=.*[A-Z]).*$/);\r\n        const lower=RegExp(/^(?=.*[a-z]).*$/);\r\n        const special=RegExp(/^(?=.*[@$!%*?&]).*$/);\r\n        const num=RegExp(/^(?=.*[0-9]).*$/);\r\n        if(!upper.test(value)){\r\n            return 'Password must contain atleast 1 Uppercase character';}\r\n        else if(!lower.test(value)){\r\n            return 'Password must contain atleast 1 Lowercase character';}\r\n        else if(!special.test(value)){\r\n            return 'Password must contain atleast 1 Special character';}\r\n        // else if(value!== this.state.fname && value!== this.state.lname){\r\n            // return 'Password cannot contain users first name or last name';}\r\n            else if(!num.test(value)){\r\n                return 'Password must contain atleast 1 Number';}\r\n            else if(value.length<8){\r\n                return 'Password must contain minimum 8 characters';}\r\n        else{ return '';}\r\n    };\r\n    const userReg=(event)=>{\r\n        event.preventDefault();\r\n        let name=nameInp.current.value;\r\n        let mobile=mobileInp.current.value;\r\n        let address=addressInp.current.value;\r\n        let email=emailInp.current.value;\r\n        let password=passInp.current.value;\r\n        let con_password=cpassInp.current.value;\r\n            console.log(email,password)\r\n            if(validate(errors))\r\n            { \r\n                if(userData.length !== 0){\r\n                let arr=userData\r\n                console.log(arr)\r\n                userData.map(user=>\r\n                {if( user.email===email && user.password===password)\r\n                    {\r\n                        alert(\" User already Registered!!\")\r\n                        return navigate('/login',{replace:true});\r\n                    }\r\n\r\n\r\n                else{\r\n                    \r\n                    alert('Registered In Successfully!')\r\n                    let data={name:nameInp.current.value,email:emailInp.current.value,mobile:mobileInp.current.value,address:addressInp.current.value,password:passInp.current.value,con_password:cpassInp.current.value}\r\n                    addUser(data)\r\n                    .then(res=>{\r\n                        console.log(\"Data Posted!!\")\r\n                        // navigate('/login',{replace:true})\r\n                    })\r\n                    return navigate(\"/login\",{replace:true})\r\n             \r\n                }\r\n                })\r\n                \r\n\r\n\r\n                    }  \r\n            else{\r\n            let arr={con_password,password,email,mobile,address,name}\r\n            alert('Registered In Successfully!')\r\n              addUser(arr)\r\n              .then(res=>{\r\n                  console.log(\"Data Posted!!\")\r\n                  // navigate('/login',{replace:true})\r\n              })\r\n              return navigate(\"/login\",{replace:true})\r\n             \r\n                }\r\n        }\r\n        /* else{\r\n        alert(\"User Not Found!\")\r\n        document.getElementById(\"email\").value=null;\r\n        document.getElementById(\"password\").value=null;\r\n        } */\r\n           \r\n            \r\n            else{\r\n               alert(\"Enter Correct Email and Password!!\")\r\n                \r\n            \r\n            }\r\n           \r\n        \r\n    }\r\n    const validate=(errors)=>{\r\n        let valid=true;\r\n        Object.values(errors).forEach((val)=> val.length >0 && (valid=false));\r\n        return valid;\r\n    }\r\n    return (\r\n        <>\r\n            <DashNav/>\r\n            <Container>\r\n                <h1>Register</h1>\r\n            <Form  method=\"post\">\r\n                <Form.Group className=\"mb-3\" controlId=\"formGroupEmail\">\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control type=\"text\" name=\"name\" placeholder=\"Enter name\" onChange={handler} ref={nameInp}/>\r\n                    {errors.name.length>0 && <span style={{color:'red'}}>{errors.name}</span>}\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"formGroupEmail\">\r\n                    <Form.Label>Email address</Form.Label>\r\n                    <Form.Control type=\"email\" name=\"email\" placeholder=\"Enter email\" ref={emailInp} onChange={handler}/>\r\n                    {errors.email.length>0 && <span style={{color:'red'}}>{errors.email}</span>}\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"formGroupPassword\">\r\n                    <Form.Label>Mobile</Form.Label>\r\n                    <Form.Control type=\"text\" name=\"mobile\" placeholder=\"Mobile no\" ref={mobileInp} onChange={handler}/>\r\n                    {errors.mobile.length>0 && <span style={{color:'red'}}>{errors.mobile}</span>}\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"formGroupPassword\">\r\n                    <Form.Label>Street Address</Form.Label>\r\n                    <Form.Control type=\"text\" name=\"address\" placeholder=\"Addresss\" ref={addressInp} onChange={handler}/>\r\n                    {errors.address.length>0 && <span style={{color:'red'}}>{errors.address}</span>}\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"formGroupPassword\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type=\"password\" name=\"password\" placeholder=\"Password\" ref={passInp} onChange={handler}/>\r\n                    {errors.password.length>0 && <span style={{color:'red'}}>{errors.password}</span>}\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"formGroupPassword\">\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control type=\"password\" name=\"con_password\" placeholder=\"Re-enter Password\" ref={cpassInp} onChange={handler}/>\r\n                    {errors.con_password.length>0 && <span style={{color:'red'}}>{errors.con_password}</span>}\r\n                </Form.Group>\r\n\r\n                <Button className=\"btn btn-dark\" onClick={userReg}>Submit</Button>\r\n            </Form>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n","C:\\Training\\JS_Fullstack\\Mongo_DB\\pizza_delivery\\frontend\\src\\components\\Dashboard.js",[],"C:\\Training\\JS_Fullstack\\Mongo_DB\\pizza_delivery\\frontend\\src\\components\\MyOrder.js",[],"C:\\Training\\JS_Fullstack\\Mongo_DB\\pizza_delivery\\frontend\\src\\components\\Menu.js",["79"],"import React,{useEffect,useState} from 'react'\r\nimport { addPizza, addQty, getMenu, getPizza } from '../config/Myservice'\r\nimport Navv from './Navv'\r\nimport { Card,Button,Container } from 'react-bootstrap';\r\nimport { useNavigate } from 'react-router';\r\nimport jwt_decode from 'jwt-decode';\r\n\r\nexport default function Menu() {\r\n    const [pizzaMenu,setPizzaMenu]=useState([]);\r\n    const [orderData,setOrderData]=useState([]);\r\n    const [uid,setUid]=useState('')\r\n    const navigate=useNavigate();\r\n    useEffect(()=>{\r\n        \r\n        \r\n        getPizza()\r\n        .then(res=>{\r\n          console.log(res.data.orderData)\r\n          setOrderData(res.data.orderData)\r\n        })\r\n        if(localStorage.getItem('_token')!==undefined){\r\n          let token=localStorage.getItem('_token');\r\n          let decode=jwt_decode(token);\r\n          console.log(decode)\r\n          setUid(decode.uid)\r\n          getMenu()\r\n          .then(res=>{\r\n          console.log(res.data)\r\n            setPizzaMenu(res.data)\r\n        })\r\n        }\r\n    },[])\r\n\r\n    const addCart=(id,index)=>{\r\n      alert(pizzaMenu[index].pname)\r\n      if(orderData.length===0){\r\n        let data={pname:pizzaMenu[index].pname,image:pizzaMenu[index].image,price:pizzaMenu[index].price,quantity:1}\r\n        addPizza(data,id)\r\n        .then(res=>{\r\n          console.log(res.data)\r\n            alert(\"Added to Cart\")\r\n       \r\n         })\r\n         navigate('/menu',{replace:true})\r\n         \r\n      }\r\n      else{\r\n        console.log(orderData.some(e=>e.pname===pizzaMenu[index].pname))\r\n        if(orderData.some(e=>e.pname===pizzaMenu[index].pname)){\r\n          alert(\"Already Added\")\r\n          // let qtyId=0\r\n          // orderData.some(e=>e.pname===pizzaMenu[index].pname?qtyId=e._id:e.id)\r\n          // console.log(qtyId)\r\n          // addQty(orderData,qtyId)\r\n          // .then(res=>{\r\n          //   console.log(res.data)\r\n          // })\r\n         \r\n        }\r\n        else{\r\n          let data={pname:pizzaMenu[index].pname,image:pizzaMenu[index].image,price:pizzaMenu[index].price,quantity:1}\r\n        addPizza(data,id)\r\n        .then(res=>{\r\n          console.log(res.data)\r\n            alert(\"Added to Cart\")\r\n       \r\n         })\r\n        \r\n        }\r\n        \r\n      }\r\n      \r\n      navigate('/cart',{replace:false})\r\n    }\r\n    return (\r\n        <div>\r\n            <Navv/>\r\n            <h1 className=\"text-center\">Menu : {uid}</h1>\r\n            <Container >\r\n              <div className=\"row\">\r\n            {pizzaMenu.map((pizza,index)=>\r\n                <Card style={{ width: '20rem' }} className=\"col-4 m-4\">\r\n                <Card.Img variant=\"top\" src={pizza.image} height=\"200px\" width=\"400px\"/>\r\n                <Card.Body className=\"text-center\">\r\n                  <Card.Title>{pizza.pname}</Card.Title>\r\n                  <Card.Text>\r\n                   Price : {pizza.price} /-\r\n                  </Card.Text>\r\n                  <Button variant=\"primary\" onClick={()=>addCart(pizza._id,index)}>Add</Button>\r\n                </Card.Body>\r\n              </Card>)}\r\n              </div>\r\n              </Container>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Training\\JS_Fullstack\\Mongo_DB\\pizza_delivery\\frontend\\src\\components\\Profile.js",["80"],"import React,{useState,useEffect} from 'react'\r\nimport Navv from './Navv';\r\nimport { Container } from 'react-bootstrap';\r\nimport { useNavigate } from 'react-router';\r\nimport { getRegUser } from '../config/Myservice';\r\n\r\nexport default function Profile() {\r\n    const [regUser,setRegUser]=useState([]);\r\n    useEffect(()=>{\r\n        getRegUser()\r\n        .then(res=>{\r\n            if(res.data.err === 1){\r\n                alert(res.data.msg)\r\n            }\r\n            else if( res.data.err === 0){\r\n                console.log(res.data)\r\n                setRegUser(res.data.regUser)\r\n                // console.log(regUser)\r\n            }\r\n        })\r\n    },[])\r\n\r\n    return (\r\n        <div>\r\n            <Navv/>\r\n            <Container>\r\n                    <div className=\"container p-3\" style={{height:\"500px\",width:\"600px\",margin:\"auto\",backgroundColor:\"wheat\"}}>\r\n                        <h1 className=\"text-center\">Profile Info</h1>\r\n                {regUser.map(user=>\r\n                <div  style={{marginLeft:\"200px\",marginTop:\"70px\"}}>\r\n                        <p>Name : {user.name}</p>\r\n                        <p>Email : {user.email}</p>\r\n                        <p>Mobile no : {user.mobile}</p>\r\n                        <p>Address : {user.address}</p>\r\n                        <p>Password : {user.password}</p>\r\n                        </div>\r\n                        )}\r\n                    </div>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Training\\JS_Fullstack\\Mongo_DB\\pizza_delivery\\frontend\\src\\components\\Login.js",["81","82"],"import Button from '@restart/ui/esm/Button'\r\nimport React,{useRef,useState,useEffect} from 'react'\r\nimport { Container,Form } from 'react-bootstrap'\r\nimport DashNav from './DashNav'\r\nimport { useNavigate } from 'react-router'\r\nimport { getRegUser, logUser } from '../config/Myservice'\r\n\r\nconst regForEmail=RegExp(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/);\r\n\r\nexport default function Login() {\r\n    const [user,setUser]=useState([]);\r\n    const emailInp=useRef(null)\r\n    const passInp=useRef(null)\r\n    const [select,setSelect]=useState();\r\n    const [errors,setErrors]=useState({email:'',password:''});\r\n    const navigate=useNavigate();\r\n\r\n    useEffect(()=>{\r\n        getRegUser()\r\n        .then(res=>{\r\n            if(res.data.err === 1){\r\n                alert(res.data.msg)\r\n            }\r\n            else if( res.data.err === 0){\r\n                // console.log(res.data.regUser)\r\n                setUser(res.data.regUser)\r\n                // console.log(userData)\r\n            }\r\n        })\r\n    },[user])\r\n\r\n    const forPassword=(value)=>{\r\n        const upper=RegExp(/^(?=.*[A-Z]).*$/);\r\n        const lower=RegExp(/^(?=.*[a-z]).*$/);\r\n        const special=RegExp(/^(?=.*[@$!%*?&]).*$/);\r\n        const num=RegExp(/^(?=.*[0-9]).*$/);\r\n        if(!upper.test(value)){\r\n            return 'Password must contain atleast 1 Uppercase character';}\r\n        else if(!lower.test(value)){\r\n            return 'Password must contain atleast 1 Lowercase character';}\r\n        else if(!special.test(value)){\r\n            return 'Password must contain atleast 1 Special character';}\r\n        // else if(value!== this.state.fname && value!== this.state.lname){\r\n            // return 'Password cannot contain users first name or last name';}\r\n            else if(!num.test(value)){\r\n                return 'Password must contain atleast 1 Number';}\r\n            else if(value.length<8){\r\n                return 'Password must contain minimum 8 characters';}\r\n        else{ return '';}\r\n    };\r\n\r\n    const handler=(event)=>{\r\n        const {name,value}=event.target;\r\n        switch(name){\r\n            case 'email':\r\n                errors.email=regForEmail.test(value)?'':'Email is not valid';\r\n                break;\r\n            case 'password':\r\n                errors.password=forPassword(value);\r\n                console.log(errors.password)\r\n                break;\r\n            default :\r\n                break;\r\n        }\r\n        setSelect({errors,[name]:value},()=>{\r\n            console.log(errors)\r\n        })\r\n        console.log(select)\r\n    }\r\n    const userLogin=(event)=>{\r\n        event.preventDefault();\r\n\r\n        let email=emailInp.current.value;\r\n        let password=passInp.current.value\r\n            // console.log(email,password)\r\n            if(validate(errors))\r\n            {user.length !==0 && user.map(user=>\r\n                {\r\n                    if(user.email===email && user.password===password){\r\n                        \r\n                        let arr={email,password}\r\n                        alert('Logged In Successfully!')\r\n                        logUser(arr)\r\n                        .then(res=>{\r\n                            if(res.data.err===1){\r\n                                console.log(res.data) \r\n                                navigate('/login',{replace:true})\r\n                            }\r\n                            else if(res.data.err===0){\r\n                                console.log(res.data)\r\n                                localStorage.setItem('_token',res.data.token);\r\n                                navigate('/menu',{replace:true})\r\n                            }\r\n                            \r\n                        })\r\n                        //  return navigate(\"/menu\",{replace:true})\r\n                            \r\n                    }\r\n                    else{\r\n                    alert(\"User Not Found!Please Register yourself!!\")\r\n                    return navigate(\"/register\",{replace:true})\r\n                    // document.getElementById(\"email\").value=null;\r\n                    // document.getElementById(\"password\").value=null;\r\n                    }\r\n                }\r\n            )\r\n           \r\n            }\r\n            else{\r\n               alert(\"Enter Correct Email and Password!!\")\r\n               \r\n            \r\n            }\r\n    }\r\n\r\n    const validate=(errors)=>{\r\n        let valid=true;\r\n        Object.values(errors).forEach((val)=> val.length >0 && (valid=false));\r\n        return valid;\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <DashNav/>\r\n            <Container>\r\n            <Form  method=\"post\">\r\n                <Form.Group className=\"mb-3\" controlId=\"formGroupEmail\">\r\n                    <Form.Label>Email address</Form.Label>\r\n                    <Form.Control type=\"email\" name=\"email\" placeholder=\"Enter email\" onChange={handler} ref={emailInp}/>\r\n                    {errors.email.length>0 && <span style={{color:'red'}}>{errors.email}</span>}\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"formGroupEmail\">\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control type=\"password\" name=\"password\" placeholder=\"Enter password\" onChange={handler} ref={passInp}/>\r\n                    {errors.password.length>0 && <span style={{color:'red'}}>{errors.password}</span>}\r\n                </Form.Group>\r\n                <Button className=\"btn btn-dark\" onClick={userLogin}>Login</Button>\r\n            </Form>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n","C:\\Training\\JS_Fullstack\\Mongo_DB\\pizza_delivery\\frontend\\src\\components\\Logout.js",[],"C:\\Training\\JS_Fullstack\\Mongo_DB\\pizza_delivery\\frontend\\src\\components\\Cart.js",["83","84"],"import Button from '@restart/ui/esm/Button';\r\nimport React,{useEffect,useState} from 'react'\r\nimport { Container, Table } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { getPizza } from '../config/Myservice';\r\nimport Navv from './Navv'\r\n\r\nexport default function Cart() {\r\n    const [orders,setOrders]=useState([]);\r\n    // const [total,setTotal]=useState(0)\r\n    let total=0\r\n    orders.forEach(ord => {\r\n        total=total + ord.price;\r\n        // console.log(total)\r\n    });\r\n    useEffect(()=>{\r\n        getPizza()\r\n        .then(res=>{\r\n            console.log(res.data)\r\n            setOrders(res.data.orderData)\r\n        })\r\n        \r\n        console.log(total)\r\n    },[])\r\n    return (\r\n        <div>\r\n            <Navv/>\r\n            <Container>\r\n                <Table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Sr. No</th>\r\n                            <th>Name</th>\r\n                            <th>Image</th>\r\n                            <th>Quantity</th>\r\n                            <th>Price</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {orders.map((ord,index)=>\r\n                            <tr>\r\n                                <td>{index+1}</td>\r\n                                <td>{ord.pname}</td>\r\n                                <td><img src={ord.image} alt=\"\" height=\"100px\" width=\"100px\"/></td>\r\n                                <td>{ord.quantity}</td>\r\n                                <td>{ord.price}</td>\r\n                                \r\n                            </tr>\r\n                            )}\r\n                            <tr>\r\n                                <td colSpan=\"4\">Total</td>\r\n                                <td>{total}</td>\r\n                            </tr>  \r\n                    </tbody>\r\n                </Table>\r\n                <div className=\"row\">\r\n                    <div className=\"col-9\"></div>\r\n                <Link to=\"/checkout\" className=\"btn btn-success mt-2 mb-5 col-3 align-self-end\">Checkout</Link>\r\n                </div>\r\n            </Container>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","C:\\Training\\JS_Fullstack\\Mongo_DB\\pizza_delivery\\frontend\\src\\components\\Checkout.js",["85"],"import React,{useEffect,useState,useRef} from 'react'\r\nimport Navv from './Navv';\r\nimport { Container,Form,Button } from 'react-bootstrap';\r\nimport { getPizza, plcOrder } from '../config/Myservice';\r\nimport { useNavigate } from 'react-router';\r\n\r\nexport default function Checkout() {\r\n    const [orders,setOrders]=useState([]);\r\n    const creditInp=useRef(null);\r\n    const navigate=useNavigate();\r\n    // const [total,setTotal]=useState(0)\r\n    let total=0\r\n    let totalqty=0\r\n    orders.forEach(ord => {\r\n        total=total + ord.price;\r\n        totalqty=totalqty + ord.quantity;\r\n        // console.log(total)\r\n    });\r\n    useEffect(()=>{\r\n        getPizza()\r\n        .then(res=>{\r\n            console.log(res.data)\r\n            setOrders(res.data.orderData)\r\n        })\r\n        \r\n        console.log(total)\r\n    },[])\r\n\r\n    const placeOrder=(event)=>{\r\n        event.preventDefault();\r\n        if(creditInp.current.value.length === 16){\r\n            let data={credit:creditInp.current.value,quantity:totalqty,price:total}\r\n            console.log(data)\r\n            plcOrder(data)\r\n            .then(res=>{\r\n                console.log(res.data)\r\n            })\r\n            alert(\"Order Placed!\")\r\n            navigate(\"/orderplaced\",{replace:true})\r\n        }\r\n        else{\r\n            alert(\"Enter Valid Card number\")\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <Navv/>\r\n            <Container>\r\n                <h1>Checkout</h1>\r\n                <Form onSubmit={placeOrder} method=\"post\">\r\n  <Form.Group className=\"mb-3\" controlId=\"credit\">\r\n    <Form.Label>Credirt Card</Form.Label>\r\n    <Form.Control type=\"text\" placeholder=\"Enter Credit Card number...\" ref={creditInp}/>\r\n  </Form.Group>\r\n    <p>Order Total : <b>{total}/-</b></p>\r\n  <Button variant=\"primary\" type=\"submit\">\r\n    Submit\r\n  </Button>\r\n</Form>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Training\\JS_Fullstack\\Mongo_DB\\pizza_delivery\\frontend\\src\\components\\OrderPlaced.js",[],"C:\\Training\\JS_Fullstack\\Mongo_DB\\pizza_delivery\\frontend\\src\\components\\DashNav.js",[],"C:\\Training\\JS_Fullstack\\Mongo_DB\\pizza_delivery\\frontend\\src\\components\\Navv.js",["86","87","88"],"import React,{useState,useEffect} from 'react'\r\nimport {Navbar,Container,Button} from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useNavigate } from 'react-router';\r\nimport { getMyOrders, getPizza } from '../config/Myservice';\r\n\r\nexport default function Navv() {\r\n  const [orders,setOrders]=useState([]);\r\n    // const [total,setTotal]=useState(0)\r\n    let total=0\r\n    orders.forEach(ord => {\r\n        total=total + ord.quantity;\r\n        // console.log(total)\r\n    });\r\n    useEffect(()=>{\r\n        getPizza()\r\n        .then(res=>{\r\n            console.log(res.data)\r\n            setOrders(res.data.orderData)\r\n        })\r\n        \r\n        console.log(total)\r\n    },[])\r\n  const navigate=useNavigate();\r\n  const logOut=()=>{\r\n    // localStorage.setItem('_token',null)\r\n    navigate('/',{replace:true})\r\n  }\r\n    return (\r\n        <>\r\n            <Container>\r\n            <Navbar variant=\"dark\" className=\"row\">\r\n    <Container className=\"col-7\">\r\n      <Navbar.Brand href=\"/\"  >\r\n        <img\r\n          alt=\"\"\r\n          src=\"images/icon.png\"\r\n          width=\"80\"\r\n          height=\"80\"\r\n          className=\"d-inline-block align-top rounded-circle\"\r\n        />\r\n      </Navbar.Brand>\r\n    </Container>\r\n    <Container className=\"col-5\">\r\n        <Link to=\"/menu\" className=\"text-dark text-decoration-none\">Menu</Link> \r\n        <Link to=\"/cart\" className=\"text-dark  text-decoration-none\">Cart <span>{total}</span></Link> \r\n        <Link to=\"/orders\" className=\"text-dark text-decoration-none\">My orders</Link> \r\n        <Link to=\"/profile\" className=\"text-dark text-decoration-none\">Profile</Link> \r\n        <button to=\"/logout\" className=\"btn text-decoration-none btn-outline-dark\" onClick={logOut}>Logout</button> \r\n    </Container>\r\n  </Navbar>\r\n  </Container>\r\n        </>\r\n    )\r\n}\r\n","C:\\Training\\JS_Fullstack\\Mongo_DB\\pizza_delivery\\frontend\\src\\config\\Myservice.js",[],"C:\\Training\\JS_Fullstack\\Mongo_DB\\pizza_delivery\\frontend\\src\\config\\Url.js",[],{"ruleId":"89","severity":1,"message":"90","line":20,"column":12,"nodeType":"91","messageId":"92","endLine":20,"endColumn":18},{"ruleId":"89","severity":1,"message":"93","line":21,"column":19,"nodeType":"91","messageId":"92","endLine":21,"endColumn":28},{"ruleId":"89","severity":1,"message":"94","line":2,"column":20,"nodeType":"91","messageId":"92","endLine":2,"endColumn":26},{"ruleId":"89","severity":1,"message":"95","line":4,"column":10,"nodeType":"91","messageId":"92","endLine":4,"endColumn":21},{"ruleId":"89","severity":1,"message":"93","line":15,"column":19,"nodeType":"91","messageId":"92","endLine":15,"endColumn":28},{"ruleId":"96","severity":1,"message":"97","line":77,"column":47,"nodeType":"98","messageId":"99","endLine":77,"endColumn":49},{"ruleId":"89","severity":1,"message":"100","line":1,"column":8,"nodeType":"91","messageId":"92","endLine":1,"endColumn":14},{"ruleId":"101","severity":1,"message":"102","line":24,"column":7,"nodeType":"103","endLine":24,"endColumn":9,"suggestions":"104"},{"ruleId":"101","severity":1,"message":"102","line":27,"column":7,"nodeType":"103","endLine":27,"endColumn":9,"suggestions":"105"},{"ruleId":"89","severity":1,"message":"100","line":2,"column":26,"nodeType":"91","messageId":"92","endLine":2,"endColumn":32},{"ruleId":"89","severity":1,"message":"106","line":5,"column":10,"nodeType":"91","messageId":"92","endLine":5,"endColumn":21},{"ruleId":"101","severity":1,"message":"102","line":23,"column":7,"nodeType":"103","endLine":23,"endColumn":9,"suggestions":"107"},"no-unused-vars","'select' is assigned a value but never used.","Identifier","unusedVar","'setErrors' is assigned a value but never used.","'addQty' is defined but never used.","'useNavigate' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Button' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'total'. Either include it or remove the dependency array.","ArrayExpression",["108"],["109"],"'getMyOrders' is defined but never used.",["110"],{"desc":"111","fix":"112"},{"desc":"111","fix":"113"},{"desc":"111","fix":"114"},"Update the dependencies array to be: [total]",{"range":"115","text":"116"},{"range":"117","text":"116"},{"range":"118","text":"116"},[705,707],"[total]",[822,824],[696,698]]