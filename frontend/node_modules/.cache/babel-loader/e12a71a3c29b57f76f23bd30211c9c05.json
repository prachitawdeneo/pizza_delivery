{"ast":null,"code":"var _jsxFileName = \"C:\\\\Training\\\\JS_Fullstack\\\\Mongo_DB\\\\pizza_delivery\\\\frontend\\\\src\\\\components\\\\Menu.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { addPizza, addQty, getMenu, getPizza } from '../config/Myservice';\nimport Navv from './Navv';\nimport { Card, Button, Container } from 'react-bootstrap';\nimport { useNavigate } from 'react-router';\nimport jwt_decode from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Menu() {\n  _s();\n\n  const [pizzaMenu, setPizzaMenu] = useState([]);\n  const [orderData, setOrderData] = useState([]);\n  const [uid, setUid] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    getPizza().then(res => {\n      console.log(res.data.orderData);\n      setOrderData(res.data.orderData);\n    });\n\n    if (localStorage.getItem('_token') !== undefined) {\n      let token = localStorage.getItem('_token');\n      let decode = jwt_decode(token);\n      console.log(decode);\n      setUid(decode.uid);\n      getMenu().then(res => {\n        console.log(res.data);\n        setPizzaMenu(res.data);\n      });\n    }\n  }, []);\n\n  const addCart = (id, index) => {\n    alert(pizzaMenu[index].pname);\n\n    if (orderData.length === 0) {\n      let data = {\n        pname: pizzaMenu[index].pname,\n        image: pizzaMenu[index].image,\n        price: pizzaMenu[index].price,\n        quantity: 1\n      };\n      addPizza(data, id).then(res => {\n        console.log(res.data);\n        alert(\"Added to Cart\");\n      });\n      navigate('/menu', {\n        replace: true\n      });\n    } else {\n      console.log(orderData.some(e => e.pname === pizzaMenu[index].pname));\n\n      if (orderData.some(e => e.pname === pizzaMenu[index].pname)) {\n        alert(\"Already Added\"); // let qtyId=0\n        // orderData.some(e=>e.pname===pizzaMenu[index].pname?qtyId=e._id:e.id)\n        // console.log(qtyId)\n        // addQty(orderData,qtyId)\n        // .then(res=>{\n        //   console.log(res.data)\n        // })\n      } else {\n        let data = {\n          pname: pizzaMenu[index].pname,\n          image: pizzaMenu[index].image,\n          price: pizzaMenu[index].price,\n          quantity: 1\n        };\n        addPizza(data, id).then(res => {\n          console.log(res.data);\n          alert(\"Added to Cart\");\n        });\n      }\n    }\n\n    navigate('/cart', {\n      replace: false\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navv, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      children: [\"Menu : \", uid]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: pizzaMenu.map((pizza, index) => /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            width: '20rem'\n          },\n          className: \"col-4 m-4\",\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            variant: \"top\",\n            src: pizza.image,\n            height: \"200px\",\n            width: \"400px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            className: \"text-center\",\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: pizza.pname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\"Price : \", pizza.price, \" /-\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: () => addCart(pizza._id, index),\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Menu, \"JWShiene8Y/p2HCC10UC6/CQcow=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Menu;\n\nvar _c;\n\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"sources":["C:/Training/JS_Fullstack/Mongo_DB/pizza_delivery/frontend/src/components/Menu.js"],"names":["React","useEffect","useState","addPizza","addQty","getMenu","getPizza","Navv","Card","Button","Container","useNavigate","jwt_decode","Menu","pizzaMenu","setPizzaMenu","orderData","setOrderData","uid","setUid","navigate","then","res","console","log","data","localStorage","getItem","undefined","token","decode","addCart","id","index","alert","pname","length","image","price","quantity","replace","some","e","map","pizza","width","_id"],"mappings":"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","sourcesContent":["import React,{useEffect,useState} from 'react'\r\nimport { addPizza, addQty, getMenu, getPizza } from '../config/Myservice'\r\nimport Navv from './Navv'\r\nimport { Card,Button,Container } from 'react-bootstrap';\r\nimport { useNavigate } from 'react-router';\r\nimport jwt_decode from 'jwt-decode';\r\n\r\nexport default function Menu() {\r\n    const [pizzaMenu,setPizzaMenu]=useState([]);\r\n    const [orderData,setOrderData]=useState([]);\r\n    const [uid,setUid]=useState('')\r\n    const navigate=useNavigate();\r\n    useEffect(()=>{\r\n        \r\n        \r\n        getPizza()\r\n        .then(res=>{\r\n          console.log(res.data.orderData)\r\n          setOrderData(res.data.orderData)\r\n        })\r\n        if(localStorage.getItem('_token')!==undefined){\r\n          let token=localStorage.getItem('_token');\r\n          let decode=jwt_decode(token);\r\n          console.log(decode)\r\n          setUid(decode.uid)\r\n          getMenu()\r\n          .then(res=>{\r\n          console.log(res.data)\r\n            setPizzaMenu(res.data)\r\n        })\r\n        }\r\n    },[])\r\n\r\n    const addCart=(id,index)=>{\r\n      alert(pizzaMenu[index].pname)\r\n      if(orderData.length===0){\r\n        let data={pname:pizzaMenu[index].pname,image:pizzaMenu[index].image,price:pizzaMenu[index].price,quantity:1}\r\n        addPizza(data,id)\r\n        .then(res=>{\r\n          console.log(res.data)\r\n            alert(\"Added to Cart\")\r\n       \r\n         })\r\n         navigate('/menu',{replace:true})\r\n         \r\n      }\r\n      else{\r\n        console.log(orderData.some(e=>e.pname===pizzaMenu[index].pname))\r\n        if(orderData.some(e=>e.pname===pizzaMenu[index].pname)){\r\n          alert(\"Already Added\")\r\n          // let qtyId=0\r\n          // orderData.some(e=>e.pname===pizzaMenu[index].pname?qtyId=e._id:e.id)\r\n          // console.log(qtyId)\r\n          // addQty(orderData,qtyId)\r\n          // .then(res=>{\r\n          //   console.log(res.data)\r\n          // })\r\n         \r\n        }\r\n        else{\r\n          let data={pname:pizzaMenu[index].pname,image:pizzaMenu[index].image,price:pizzaMenu[index].price,quantity:1}\r\n        addPizza(data,id)\r\n        .then(res=>{\r\n          console.log(res.data)\r\n            alert(\"Added to Cart\")\r\n       \r\n         })\r\n        \r\n        }\r\n        \r\n      }\r\n      \r\n      navigate('/cart',{replace:false})\r\n    }\r\n    return (\r\n        <div>\r\n            <Navv/>\r\n            <h1 className=\"text-center\">Menu : {uid}</h1>\r\n            <Container >\r\n              <div className=\"row\">\r\n            {pizzaMenu.map((pizza,index)=>\r\n                <Card style={{ width: '20rem' }} className=\"col-4 m-4\">\r\n                <Card.Img variant=\"top\" src={pizza.image} height=\"200px\" width=\"400px\"/>\r\n                <Card.Body className=\"text-center\">\r\n                  <Card.Title>{pizza.pname}</Card.Title>\r\n                  <Card.Text>\r\n                   Price : {pizza.price} /-\r\n                  </Card.Text>\r\n                  <Button variant=\"primary\" onClick={()=>addCart(pizza._id,index)}>Add</Button>\r\n                </Card.Body>\r\n              </Card>)}\r\n              </div>\r\n              </Container>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}