{"ast":null,"code":"var _jsxFileName = \"C:\\\\Training\\\\JS_Fullstack\\\\Mongo_DB\\\\pizza_delivery\\\\frontend\\\\src\\\\components\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport DashNav from './DashNav';\nimport { Form, Container, Button } from 'react-bootstrap';\nimport { addUser, getRegUser } from '../config/Myservice';\nimport { useNavigate } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst regForName = RegExp(/^[A-Za-z]{2,50}$/);\nconst regForEmail = RegExp(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/);\nconst regForAddress = RegExp(/^[A-Za-z0-9]{5,150}$/);\nexport default function Register() {\n  _s();\n\n  const [userData, setUserData] = useState([]);\n  const nameInp = useRef(null);\n  const emailInp = useRef(null);\n  const mobileInp = useRef(null);\n  const addressInp = useRef(null);\n  const passInp = useRef(null);\n  const cpassInp = useRef(null);\n  const [select, setSelect] = useState();\n  const [errors, setErrors] = useState({\n    name: '',\n    mobile: '',\n    address: '',\n    email: '',\n    password: '',\n    con_password: ''\n  });\n  const navigate = useNavigate();\n  useEffect(() => {\n    getRegUser().then(res => {\n      if (res.data.err === 1) {\n        alert(res.data.msg);\n      } else if (res.data.err === 0) {\n        // console.log(res.data.regUser)\n        setUserData(res.data.regUser); // console.log(userData)\n      }\n    });\n  }, [userData]);\n\n  const handler = event => {\n    const {\n      name,\n      value\n    } = event.target;\n\n    switch (name) {\n      case 'name':\n        errors.name = regForName.test(value) ? '' : 'Enter Valid name!';\n        break;\n\n      case 'mobile':\n        errors.mobile = value.length === 10 ? '' : 'Enter Valid Mobile no!';\n        break;\n\n      case 'address':\n        errors.address = regForAddress.test(value) ? '' : 'Enter Valid Address!';\n        break;\n\n      case 'email':\n        errors.email = regForEmail.test(value) ? '' : 'Email is not valid';\n        break;\n\n      case 'password':\n        errors.password = forPassword(value);\n        console.log(errors.password);\n        break;\n\n      case 'con_password':\n        errors.con_password = passInp.current.value === value ? '' : 'Password does not match'; //  console.log(errors.password)\n\n        break;\n\n      default:\n        break;\n    }\n\n    setSelect({\n      errors,\n      [name]: value\n    }, () => {\n      console.log(errors);\n    });\n  };\n\n  const forPassword = value => {\n    const upper = RegExp(/^(?=.*[A-Z]).*$/);\n    const lower = RegExp(/^(?=.*[a-z]).*$/);\n    const special = RegExp(/^(?=.*[@$!%*?&]).*$/);\n    const num = RegExp(/^(?=.*[0-9]).*$/);\n\n    if (!upper.test(value)) {\n      return 'Password must contain atleast 1 Uppercase character';\n    } else if (!lower.test(value)) {\n      return 'Password must contain atleast 1 Lowercase character';\n    } else if (!special.test(value)) {\n      return 'Password must contain atleast 1 Special character';\n    } // else if(value!== this.state.fname && value!== this.state.lname){\n    // return 'Password cannot contain users first name or last name';}\n    else if (!num.test(value)) {\n      return 'Password must contain atleast 1 Number';\n    } else if (value.length < 8) {\n      return 'Password must contain minimum 8 characters';\n    } else {\n      return '';\n    }\n  };\n\n  const userReg = event => {\n    event.preventDefault();\n    let name = nameInp.current.value;\n    let mobile = mobileInp.current.value;\n    let address = addressInp.current.value;\n    let email = emailInp.current.value;\n    let password = passInp.current.value;\n    let con_password = cpassInp.current.value;\n    console.log(email, password);\n\n    if (validate(errors)) {\n      if (userData.length !== 0) {\n        let arr = userData;\n        console.log(arr);\n        userData.map(user => {\n          if (user.email === email && user.password === password) {\n            alert(\" User already Registered!!\");\n            return navigate('/login', {\n              replace: true\n            });\n          } else {\n            alert('Registered In Successfully!');\n            let data = {\n              name: nameInp.current.value,\n              email: emailInp.current.value,\n              mobile: mobileInp.current.value,\n              address: addressInp.current.value,\n              password: passInp.current.value,\n              con_password: cpassInp.current.value\n            };\n            addUser(data).then(res => {\n              console.log(\"Data Posted!!\"); // navigate('/login',{replace:true})\n            });\n            return navigate(\"/login\", {\n              replace: true\n            });\n          }\n        });\n      } else {\n        let arr = {\n          con_password,\n          password,\n          email,\n          mobile,\n          address,\n          name\n        };\n        alert('Registered In Successfully!');\n        addUser(arr).then(res => {\n          console.log(\"Data Posted!!\"); // navigate('/login',{replace:true})\n        });\n        return navigate(\"/login\", {\n          replace: true\n        });\n      }\n    }\n    /* else{\r\n    alert(\"User Not Found!\")\r\n    document.getElementById(\"email\").value=null;\r\n    document.getElementById(\"password\").value=null;\r\n    } */\n    else {\n      alert(\"Enter Correct Email and Password!!\");\n    }\n  };\n\n  const validate = errors => {\n    let valid = true;\n    Object.values(errors).forEach(val => val.length > 0 && (valid = false));\n    return valid;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DashNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        method: \"post\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formGroupEmail\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            name: \"name\",\n            placeholder: \"Enter name\",\n            onChange: handler,\n            ref: nameInp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 21\n          }, this), errors.name.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: 'red'\n            },\n            children: errors.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 46\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formGroupEmail\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            name: \"email\",\n            placeholder: \"Enter email\",\n            ref: emailInp,\n            onChange: handler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 21\n          }, this), errors.email.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: 'red'\n            },\n            children: errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 47\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formGroupPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Mobile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            name: \"mobile\",\n            placeholder: \"Mobile no\",\n            ref: mobileInp,\n            onChange: handler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 21\n          }, this), errors.mobile.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: 'red'\n            },\n            children: errors.mobile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 48\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formGroupPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Street Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            name: \"address\",\n            placeholder: \"Addresss\",\n            ref: addressInp,\n            onChange: handler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 21\n          }, this), errors.address.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: 'red'\n            },\n            children: errors.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 49\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formGroupPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            name: \"password\",\n            placeholder: \"Password\",\n            ref: passInp,\n            onChange: handler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 21\n          }, this), errors.password.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: 'red'\n            },\n            children: errors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 50\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formGroupPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            name: \"con_password\",\n            placeholder: \"Re-enter Password\",\n            ref: cpassInp,\n            onChange: handler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 21\n          }, this), errors.con_password.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: 'red'\n            },\n            children: errors.con_password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 54\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"btn btn-dark\",\n          onClick: userReg,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Register, \"RgKDY1ILoAkFkQGsr4TDJE46ffw=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Training/JS_Fullstack/Mongo_DB/pizza_delivery/frontend/src/components/Register.js"],"names":["React","useState","useEffect","useRef","DashNav","Form","Container","Button","addUser","getRegUser","useNavigate","regForName","RegExp","regForEmail","regForAddress","Register","userData","setUserData","nameInp","emailInp","mobileInp","addressInp","passInp","cpassInp","select","setSelect","errors","setErrors","name","mobile","address","email","password","con_password","navigate","then","res","data","err","alert","msg","regUser","handler","event","value","target","test","length","forPassword","console","log","current","upper","lower","special","num","userReg","preventDefault","validate","arr","map","user","replace","valid","Object","values","forEach","val","color"],"mappings":"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","sourcesContent":["import React,{useState,useEffect,useRef} from 'react'\r\nimport DashNav from './DashNav';\r\nimport {Form,Container,Button} from 'react-bootstrap'\r\nimport { addUser, getRegUser } from '../config/Myservice';\r\nimport { useNavigate } from 'react-router';\r\n\r\nconst regForName=RegExp(/^[A-Za-z]{2,50}$/);\r\nconst regForEmail=RegExp(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/);\r\nconst regForAddress=RegExp(/^[A-Za-z0-9]{5,150}$/)\r\n\r\n\r\nexport default function Register() {\r\n    const [userData,setUserData]=useState([]);\r\n    const nameInp=useRef(null);\r\n    const emailInp=useRef(null);\r\n    const mobileInp=useRef(null);\r\n    const addressInp=useRef(null);\r\n    const passInp=useRef(null);\r\n    const cpassInp=useRef(null);\r\n    const [select,setSelect]=useState();\r\n    const [errors,setErrors]=useState({ name:'',mobile:'',address:'', email:'',password:'',con_password:''});\r\n    const navigate=useNavigate();\r\n\r\n    useEffect(()=>{\r\n        getRegUser()\r\n        .then(res=>{\r\n            if(res.data.err === 1){\r\n                alert(res.data.msg)\r\n            }\r\n            else if( res.data.err === 0){\r\n                // console.log(res.data.regUser)\r\n                setUserData(res.data.regUser)\r\n                // console.log(userData)\r\n            }\r\n        })\r\n    },[userData])\r\n\r\n    const handler=(event)=>{\r\n        const {name,value}=event.target;\r\n        switch(name){\r\n            case 'name':\r\n                errors.name=regForName.test(value)?'':'Enter Valid name!';\r\n                break;\r\n            case 'mobile':\r\n                errors.mobile=value.length===10?'':'Enter Valid Mobile no!';\r\n                break;\r\n            case 'address':\r\n                errors.address=regForAddress.test(value)?'':'Enter Valid Address!';\r\n                break;\r\n            case 'email':\r\n                errors.email=regForEmail.test(value)?'':'Email is not valid';\r\n                break;\r\n            case 'password':\r\n                errors.password=forPassword(value);\r\n                console.log(errors.password)\r\n                \r\n                break;\r\n            case 'con_password':\r\n                errors.con_password=passInp.current.value===(value)?'':'Password does not match';\r\n                //  console.log(errors.password)\r\n                break;\r\n            default :\r\n                break;\r\n        }\r\n        setSelect({errors,[name]:value},()=>{\r\n            console.log(errors)\r\n        })\r\n    }\r\n\r\n    const forPassword=(value)=>{\r\n        const upper=RegExp(/^(?=.*[A-Z]).*$/);\r\n        const lower=RegExp(/^(?=.*[a-z]).*$/);\r\n        const special=RegExp(/^(?=.*[@$!%*?&]).*$/);\r\n        const num=RegExp(/^(?=.*[0-9]).*$/);\r\n        if(!upper.test(value)){\r\n            return 'Password must contain atleast 1 Uppercase character';}\r\n        else if(!lower.test(value)){\r\n            return 'Password must contain atleast 1 Lowercase character';}\r\n        else if(!special.test(value)){\r\n            return 'Password must contain atleast 1 Special character';}\r\n        // else if(value!== this.state.fname && value!== this.state.lname){\r\n            // return 'Password cannot contain users first name or last name';}\r\n            else if(!num.test(value)){\r\n                return 'Password must contain atleast 1 Number';}\r\n            else if(value.length<8){\r\n                return 'Password must contain minimum 8 characters';}\r\n        else{ return '';}\r\n    };\r\n    const userReg=(event)=>{\r\n        event.preventDefault();\r\n        let name=nameInp.current.value;\r\n        let mobile=mobileInp.current.value;\r\n        let address=addressInp.current.value;\r\n        let email=emailInp.current.value;\r\n        let password=passInp.current.value;\r\n        let con_password=cpassInp.current.value;\r\n            console.log(email,password)\r\n            if(validate(errors))\r\n            { \r\n                if(userData.length !== 0){\r\n                let arr=userData\r\n                console.log(arr)\r\n                userData.map(user=>\r\n                {if( user.email===email && user.password===password)\r\n                    {\r\n                        alert(\" User already Registered!!\")\r\n                        return navigate('/login',{replace:true});\r\n                    }\r\n\r\n\r\n                else{\r\n                    \r\n                    alert('Registered In Successfully!')\r\n                    let data={name:nameInp.current.value,email:emailInp.current.value,mobile:mobileInp.current.value,address:addressInp.current.value,password:passInp.current.value,con_password:cpassInp.current.value}\r\n                    addUser(data)\r\n                    .then(res=>{\r\n                        console.log(\"Data Posted!!\")\r\n                        // navigate('/login',{replace:true})\r\n                    })\r\n                    return navigate(\"/login\",{replace:true})\r\n             \r\n                }\r\n                })\r\n                \r\n\r\n\r\n                    }  \r\n            else{\r\n            let arr={con_password,password,email,mobile,address,name}\r\n            alert('Registered In Successfully!')\r\n              addUser(arr)\r\n              .then(res=>{\r\n                  console.log(\"Data Posted!!\")\r\n                  // navigate('/login',{replace:true})\r\n              })\r\n              return navigate(\"/login\",{replace:true})\r\n             \r\n                }\r\n        }\r\n        /* else{\r\n        alert(\"User Not Found!\")\r\n        document.getElementById(\"email\").value=null;\r\n        document.getElementById(\"password\").value=null;\r\n        } */\r\n           \r\n            \r\n            else{\r\n               alert(\"Enter Correct Email and Password!!\")\r\n                \r\n            \r\n            }\r\n           \r\n        \r\n    }\r\n    const validate=(errors)=>{\r\n        let valid=true;\r\n        Object.values(errors).forEach((val)=> val.length >0 && (valid=false));\r\n        return valid;\r\n    }\r\n    return (\r\n        <>\r\n            <DashNav/>\r\n            <Container>\r\n                <h1>Register</h1>\r\n            <Form  method=\"post\">\r\n                <Form.Group className=\"mb-3\" controlId=\"formGroupEmail\">\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control type=\"text\" name=\"name\" placeholder=\"Enter name\" onChange={handler} ref={nameInp}/>\r\n                    {errors.name.length>0 && <span style={{color:'red'}}>{errors.name}</span>}\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"formGroupEmail\">\r\n                    <Form.Label>Email address</Form.Label>\r\n                    <Form.Control type=\"email\" name=\"email\" placeholder=\"Enter email\" ref={emailInp} onChange={handler}/>\r\n                    {errors.email.length>0 && <span style={{color:'red'}}>{errors.email}</span>}\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"formGroupPassword\">\r\n                    <Form.Label>Mobile</Form.Label>\r\n                    <Form.Control type=\"text\" name=\"mobile\" placeholder=\"Mobile no\" ref={mobileInp} onChange={handler}/>\r\n                    {errors.mobile.length>0 && <span style={{color:'red'}}>{errors.mobile}</span>}\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"formGroupPassword\">\r\n                    <Form.Label>Street Address</Form.Label>\r\n                    <Form.Control type=\"text\" name=\"address\" placeholder=\"Addresss\" ref={addressInp} onChange={handler}/>\r\n                    {errors.address.length>0 && <span style={{color:'red'}}>{errors.address}</span>}\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"formGroupPassword\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type=\"password\" name=\"password\" placeholder=\"Password\" ref={passInp} onChange={handler}/>\r\n                    {errors.password.length>0 && <span style={{color:'red'}}>{errors.password}</span>}\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"formGroupPassword\">\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control type=\"password\" name=\"con_password\" placeholder=\"Re-enter Password\" ref={cpassInp} onChange={handler}/>\r\n                    {errors.con_password.length>0 && <span style={{color:'red'}}>{errors.con_password}</span>}\r\n                </Form.Group>\r\n\r\n                <Button className=\"btn btn-dark\" onClick={userReg}>Submit</Button>\r\n            </Form>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}