{"ast":null,"code":"var _jsxFileName = \"C:\\\\Training\\\\JS_Fullstack\\\\Mongo_DB\\\\pizza_delivery\\\\frontend\\\\src\\\\components\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport Button from '@restart/ui/esm/Button';\nimport React, { useRef, useState, useEffect } from 'react';\nimport { Container, Form } from 'react-bootstrap';\nimport DashNav from './DashNav';\nimport { useNavigate } from 'react-router';\nimport { getRegUser, logUser } from '../config/Myservice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst regForEmail = RegExp(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/);\nexport default function Login() {\n  _s();\n\n  const [user, setUser] = useState([]);\n  const emailInp = useRef(null);\n  const passInp = useRef(null);\n  const [select, setSelect] = useState();\n  const [errors, setErrors] = useState({\n    email: '',\n    password: ''\n  });\n  const navigate = useNavigate();\n  useEffect(() => {\n    getRegUser().then(res => {\n      if (res.data.err === 1) {\n        alert(res.data.msg);\n      } else if (res.data.err === 0) {\n        // console.log(res.data.regUser)\n        setUser(res.data.regUser); // console.log(userData)\n      }\n    });\n  }, [user]);\n\n  const forPassword = value => {\n    const upper = RegExp(/^(?=.*[A-Z]).*$/);\n    const lower = RegExp(/^(?=.*[a-z]).*$/);\n    const special = RegExp(/^(?=.*[@$!%*?&]).*$/);\n    const num = RegExp(/^(?=.*[0-9]).*$/);\n\n    if (!upper.test(value)) {\n      return 'Password must contain atleast 1 Uppercase character';\n    } else if (!lower.test(value)) {\n      return 'Password must contain atleast 1 Lowercase character';\n    } else if (!special.test(value)) {\n      return 'Password must contain atleast 1 Special character';\n    } // else if(value!== this.state.fname && value!== this.state.lname){\n    // return 'Password cannot contain users first name or last name';}\n    else if (!num.test(value)) {\n      return 'Password must contain atleast 1 Number';\n    } else if (value.length < 8) {\n      return 'Password must contain minimum 8 characters';\n    } else {\n      return '';\n    }\n  };\n\n  const handler = event => {\n    const {\n      name,\n      value\n    } = event.target;\n\n    switch (name) {\n      case 'email':\n        errors.email = regForEmail.test(value) ? '' : 'Email is not valid';\n        break;\n\n      case 'password':\n        errors.password = forPassword(value);\n        console.log(errors.password);\n        break;\n\n      default:\n        break;\n    }\n\n    setSelect({\n      errors,\n      [name]: value\n    }, () => {\n      console.log(errors);\n    });\n    console.log(select);\n  };\n\n  const userLogin = event => {\n    event.preventDefault();\n    let email = emailInp.current.value;\n    let password = passInp.current.value; // console.log(email,password)\n\n    if (validate(errors)) {\n      user.length !== 0 && user.map(user => {\n        if (user.email === email && user.password === password) {\n          let arr = {\n            email,\n            password\n          };\n          alert('Logged In Successfully!');\n          logUser(arr).then(res => {\n            if (res.data.err === 1) {\n              console.log(res.data);\n              navigate('/login', {\n                replace: true\n              });\n            } else if (res.data.err === 0) {\n              console.log(res.data);\n              localStorage.setItem('_token', res.data.token);\n              navigate('/menu', {\n                replace: true\n              });\n            }\n          }); //  return navigate(\"/menu\",{replace:true})\n        } else {\n          alert(\"User Not Found!Please Register yourself!!\");\n          return navigate(\"/register\", {\n            replace: true\n          }); // document.getElementById(\"email\").value=null;\n          // document.getElementById(\"password\").value=null;\n        }\n      });\n    } else {\n      alert(\"Enter Correct Email and Password!!\");\n    }\n  };\n\n  const validate = errors => {\n    let valid = true;\n    Object.values(errors).forEach(val => val.length > 0 && (valid = false));\n    return valid;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DashNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        method: \"post\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formGroupEmail\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            name: \"email\",\n            placeholder: \"Enter email\",\n            onChange: handler,\n            ref: emailInp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 21\n          }, this), errors.email.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: 'red'\n            },\n            children: errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 47\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formGroupEmail\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            name: \"password\",\n            placeholder: \"Enter password\",\n            onChange: handler,\n            ref: passInp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 21\n          }, this), errors.password.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: 'red'\n            },\n            children: errors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 50\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"btn btn-dark\",\n          onClick: userLogin,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Login, \"lwv+7hPvorKXP6Ja9gKL7Dl50sM=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Training/JS_Fullstack/Mongo_DB/pizza_delivery/frontend/src/components/Login.js"],"names":["Button","React","useRef","useState","useEffect","Container","Form","DashNav","useNavigate","getRegUser","logUser","regForEmail","RegExp","Login","user","setUser","emailInp","passInp","select","setSelect","errors","setErrors","email","password","navigate","then","res","data","err","alert","msg","regUser","forPassword","value","upper","lower","special","num","test","length","handler","event","name","target","console","log","userLogin","preventDefault","current","validate","map","arr","replace","localStorage","setItem","token","valid","Object","values","forEach","val","color"],"mappings":"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","sourcesContent":["import Button from '@restart/ui/esm/Button'\r\nimport React,{useRef,useState,useEffect} from 'react'\r\nimport { Container,Form } from 'react-bootstrap'\r\nimport DashNav from './DashNav'\r\nimport { useNavigate } from 'react-router'\r\nimport { getRegUser, logUser } from '../config/Myservice'\r\n\r\nconst regForEmail=RegExp(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/);\r\n\r\nexport default function Login() {\r\n    const [user,setUser]=useState([]);\r\n    const emailInp=useRef(null)\r\n    const passInp=useRef(null)\r\n    const [select,setSelect]=useState();\r\n    const [errors,setErrors]=useState({email:'',password:''});\r\n    const navigate=useNavigate();\r\n\r\n    useEffect(()=>{\r\n        getRegUser()\r\n        .then(res=>{\r\n            if(res.data.err === 1){\r\n                alert(res.data.msg)\r\n            }\r\n            else if( res.data.err === 0){\r\n                // console.log(res.data.regUser)\r\n                setUser(res.data.regUser)\r\n                // console.log(userData)\r\n            }\r\n        })\r\n    },[user])\r\n\r\n    const forPassword=(value)=>{\r\n        const upper=RegExp(/^(?=.*[A-Z]).*$/);\r\n        const lower=RegExp(/^(?=.*[a-z]).*$/);\r\n        const special=RegExp(/^(?=.*[@$!%*?&]).*$/);\r\n        const num=RegExp(/^(?=.*[0-9]).*$/);\r\n        if(!upper.test(value)){\r\n            return 'Password must contain atleast 1 Uppercase character';}\r\n        else if(!lower.test(value)){\r\n            return 'Password must contain atleast 1 Lowercase character';}\r\n        else if(!special.test(value)){\r\n            return 'Password must contain atleast 1 Special character';}\r\n        // else if(value!== this.state.fname && value!== this.state.lname){\r\n            // return 'Password cannot contain users first name or last name';}\r\n            else if(!num.test(value)){\r\n                return 'Password must contain atleast 1 Number';}\r\n            else if(value.length<8){\r\n                return 'Password must contain minimum 8 characters';}\r\n        else{ return '';}\r\n    };\r\n\r\n    const handler=(event)=>{\r\n        const {name,value}=event.target;\r\n        switch(name){\r\n            case 'email':\r\n                errors.email=regForEmail.test(value)?'':'Email is not valid';\r\n                break;\r\n            case 'password':\r\n                errors.password=forPassword(value);\r\n                console.log(errors.password)\r\n                break;\r\n            default :\r\n                break;\r\n        }\r\n        setSelect({errors,[name]:value},()=>{\r\n            console.log(errors)\r\n        })\r\n        console.log(select)\r\n    }\r\n    const userLogin=(event)=>{\r\n        event.preventDefault();\r\n\r\n        let email=emailInp.current.value;\r\n        let password=passInp.current.value\r\n            // console.log(email,password)\r\n            if(validate(errors))\r\n            {user.length !==0 && user.map(user=>\r\n                {\r\n                    if(user.email===email && user.password===password){\r\n                        \r\n                        let arr={email,password}\r\n                        alert('Logged In Successfully!')\r\n                        logUser(arr)\r\n                        .then(res=>{\r\n                            if(res.data.err===1){\r\n                                console.log(res.data) \r\n                                navigate('/login',{replace:true})\r\n                            }\r\n                            else if(res.data.err===0){\r\n                                console.log(res.data)\r\n                                localStorage.setItem('_token',res.data.token);\r\n                                navigate('/menu',{replace:true})\r\n                            }\r\n                            \r\n                        })\r\n                        //  return navigate(\"/menu\",{replace:true})\r\n                            \r\n                    }\r\n                    else{\r\n                    alert(\"User Not Found!Please Register yourself!!\")\r\n                    return navigate(\"/register\",{replace:true})\r\n                    // document.getElementById(\"email\").value=null;\r\n                    // document.getElementById(\"password\").value=null;\r\n                    }\r\n                }\r\n            )\r\n           \r\n            }\r\n            else{\r\n               alert(\"Enter Correct Email and Password!!\")\r\n               \r\n            \r\n            }\r\n    }\r\n\r\n    const validate=(errors)=>{\r\n        let valid=true;\r\n        Object.values(errors).forEach((val)=> val.length >0 && (valid=false));\r\n        return valid;\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <DashNav/>\r\n            <Container>\r\n            <Form  method=\"post\">\r\n                <Form.Group className=\"mb-3\" controlId=\"formGroupEmail\">\r\n                    <Form.Label>Email address</Form.Label>\r\n                    <Form.Control type=\"email\" name=\"email\" placeholder=\"Enter email\" onChange={handler} ref={emailInp}/>\r\n                    {errors.email.length>0 && <span style={{color:'red'}}>{errors.email}</span>}\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"formGroupEmail\">\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control type=\"password\" name=\"password\" placeholder=\"Enter password\" onChange={handler} ref={passInp}/>\r\n                    {errors.password.length>0 && <span style={{color:'red'}}>{errors.password}</span>}\r\n                </Form.Group>\r\n                <Button className=\"btn btn-dark\" onClick={userLogin}>Login</Button>\r\n            </Form>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}